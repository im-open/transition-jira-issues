name: Transition Jira Tasks by Query
description: Performs the given JQL query to find tickets and transition them to the given status.

inputs:
  domain-name:
    description: The domain name for Jira.
    required: true
    
  jql-query:
    description: The JQL query to use to find tickets that will be transitioned. If provided, will override any issues passed in the 'issues' input.
    required: false
    
  issues:
    description: Comma delimited list of issues to transition.
    required: false
    
  transition-name:
    description: The name of the transition to perform. Examples might include Open, In Progress, Deployed, etc.
    required: true

  overwrite-fields:
    description: A map of issue screen fields to overwrite, specifying the sub-field to update and its value for each field. When multiple sub-fields or other operations are required, use 'update' input instead.
    required: false
    
  process-operations: 
    description: A map containing the field name and a list of operations to perform. The fields included in here cannot be included in 'fields' input.
    required: false
    
  comment:
    description: Add a comment to the ticket after the transition
    required: false

  fail-if-issues-not-found:
    description: Fail if no issues are found or no issues transitioned.
    required: false
    default: 'false'

  fail-if-jira-inaccessible:
    description:  Fail if Jira is inaccessible at the moment. Sometimes Jira is done but shouldn't block the pipeline.
    required: false
    default: 'false'
    
  jira-username:
    description: The username to login to Jira with in order to perform the transition. Will be ignored if not set.
    required: false
    
  jira-password:
    description: The password to login to Jira with in order to perform the transition. Must be set if jira-username is set. If set when jira-username is not set, it will be ignored.
    required: false

runs:
  using: 'composite'
  steps:
    - name: Transition Jira Tickets
      shell: pwsh
      env:
        FIELDS: ${{ inputs.overwrite-fields }}
        UPDATES: ${{ inputs.process-operations }}
      run: |
        [System.Security.SecureString] $securePassword = if(!!"${{ inputs.jira-password }}") { ConvertTo-SecureString "${{ inputs.jira-password }}" -AsPlainText -Force } Else { $null }
        
        $JqlToQueryBy = "${{ inputs.jql-query }}".Trim()
        $IssueList = "${{ inputs.issues }}".Trim()
        
        If ([string]::IsNullOrEmpty($JqlToQueryBy) -And [string]::IsNullOrEmpty($IssueList)) {
          Write-Output "::error::Either 'jql-query' or 'issues' input are required"
          exit 1
        }
        
        $Issues = $issueList -split "\n"
        $Issues = $issueList -split "," | ForEach-Object { $_.Trim() } | Where-Object { $_ -ne "" }
        
        $Fields = $env:FIELDS | ConvertFrom-Json -AsHashtable
        $Updates = $env:UPDATES | ConvertFrom-Json -AsHashtable

        ${{ github.action_path }}/src/transition-jira-tasks.ps1 `
          -JiraDomain "${{ inputs.domain-name }}" `
          -JqlToQueryBy $JqlToQueryBy `
          -Issues $Issues
          -NewState "${{ inputs.transition-name }}" `
          -Fields $Fields
          -Updates $Updates
          -Comment "${{ inputs.comment }}" `
          -JiraUsername "${{ inputs.jira-username }}" `
          -JiraPassword $securePassword `
          -FailIfNoTransitionedIssues ${{ inputs.fail-if-issues-not-found }}
          -FailIfJiraInaccessible ${{ inputs.fail-if-jira-inaccessible }}
