name: Transition Jira Tasks by Query
description: Performs the given JQL query to find tickets and transition them to the given status.

inputs:
  domain-name:
    description: The domain name for Jira.
    required: true
    
  jql-query:
    description: The JQL query to use to find tickets that will be transitioned. If provided, will override any issues passed in the 'issues' input.
    required: false
    
  issues:
    description: Comma delimited list of issues to transition.
    required: false
    
  transition-name:
    description: The name of the transition to perform. Examples might include Open, In Progress, Deployed, etc.
    required: true

  update-fields:
    description: A map of issue screen fields to overwrite, specifying the sub-field to update and its value for each field. When multiple sub-fields or other operations are required, use 'update' input instead.
    required: false
    
  process-operations: 
    description: A map containing the field name and a list of operations to perform. The fields included in here cannot be included in 'fields' input.
    required: false
    
  comment:
    description: Add a comment to the ticket after the transition
    required: false

  missing-transition-as-successful:
    description: Mark as a successful if issue is missing the transition.
    required: false
    default: 'true'
      
  fail-on-transition-failure:
    description: Fail if some issues failed transitioning.
    required: false
    default: 'true'
    
  fail-if-issue-not-found:
    description: Fail if some issues are not found.
    required: false
    default: 'true'

  fail-if-jira-inaccessible:
    description:  Fail if Jira is inaccessible at the moment. Sometimes Jira is done but shouldn't block the pipeline.
    required: false
    default: 'false'
    
  jira-username:
    description: The username to login to Jira with in order to perform the transition. Will be ignored if not set.
    required: true
    
  jira-password:
    description: The password to login to Jira with in order to perform the transition. Must be set if jira-username is set. If set when jira-username is not set, it will be ignored.
    required: true
    
outputs:
  identified-issues:
    description: Issues found in JIra using the 'jql-query' or 'issues' input.
    value: ${{ steps.transition.outputs.identifiedIssues }}
    
  processed-issues:
    description: Issues successfully transitioned, skipped or (if enabled) unavailable.
    value: ${{ steps.transition.outputs.processedIssues }}
    
  transitioned-issues:
    description: Issues successfully transitioned.
    value: ${{ steps.transition.outputs.transitionedIssues }}
    
  unavailable-issues:
    description: Issues missing the specificed transition.
    value: ${{ steps.transition.outputs.unavailableTransitionIssue }}
  
  failed-issues:
    description: Issues identified but not successfully processed.
    value: ${{ steps.transition.outputs.failedIssues }}
    
  not-found-issues:
    description: Issues not found.
    value: ${{ steps.transition.outputs.notfoundIssues }}

runs:
  using: 'composite'
  steps:
    - name: Transition Jira Tickets
      id: transition
      shell: pwsh
      env:
        FIELDS: ${{ inputs.update-fields }}
        UPDATES: ${{ inputs.process-operations }}
      run: |
        If ([string]::IsNullOrEmpty("${{ inputs.jira-username }}")) {
          Write-Output "::error::Jira username is required"
          exit 1
        }
        
        If ([string]::IsNullOrEmpty("${{ inputs.jira-password }}")) {
          Write-Output "::error::Jira password is required"
          exit 1
        }
        
        Write-Output "::add-mask::${{ inputs.jira-password }}"
        [System.Security.SecureString] $securePassword = ConvertTo-SecureString "${{ inputs.jira-password }}" -AsPlainText -Force
        
        $JqlToQueryBy = "${{ inputs.jql-query }}".Trim()
        $IssueList = "${{ inputs.issues }}".Trim()
        
        $IssueKeys = @($issueList -split "\n") -split "," | ForEach-Object { $_.Trim() } | Where-Object { $_ -ne "" }
        $Fields = $env:FIELDS | ConvertFrom-Json -AsHashtable
        $Updates = $env:UPDATES | ConvertFrom-Json -AsHashtable
        
        ${{ github.action_path }}/src/transition-jira-tasks.ps1 `
          -JiraDomain "${{ inputs.domain-name }}" `
          -JqlToQueryBy $JqlToQueryBy `
          -IssueKeys $IssueKeys `
          -TransitionName "${{ inputs.transition-name }}" `
          -Fields $Fields `
          -Updates $Updates `
          -Comment "${{ inputs.comment }}" `
          -JiraUsername "${{ inputs.jira-username }}" `
          -JiraPassword $securePassword `
          -MissingTransitionAsSuccessful:$${{ (inputs.missing-transition-as-successful == 'true' && 'true') || 'false' }} `
          -FailOnTransitionFailure:$${{ (inputs.fail-on-transition-failure == 'true' && 'true') || 'false' }} `
          -FailIfNotFoundIssues:$${{ (inputs.fail-if-issue-not-found == 'true' && 'true') || 'false' }} `
          -FailIfJiraInaccessible:$${{ (inputs.fail-if-jira-inaccessible == 'true' && 'true') || 'false' }} 
